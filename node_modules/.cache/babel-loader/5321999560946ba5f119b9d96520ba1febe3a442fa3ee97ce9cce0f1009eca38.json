{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jieli\\\\Desktop\\\\Coding\\\\Project\\\\MyBlog\\\\Frontend\\\\my-blog\\\\src\\\\Router\\\\CustomRoutes.js\",\n  _s = $RefreshSig$();\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport { useAuth } from \"../provider/authProvider\";\nimport { ProtectedRoute } from \"./ProtectedRoute\";\nimport Home from \"../Components/Home\";\nimport About from \"../Components/About\";\nimport Login from \"../Components/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Routes = () => {\n  _s();\n  const {\n    token\n  } = useAuth();\n\n  // 公共路由配置\n  const routesForPublic = [{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"/about-us\",\n    element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this)\n  }];\n\n  // 授权的用户才可以访问的路由配置\n  const routesForAuthenticatedOnly = [{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this),\n    // Wrap the component in ProtectedRoute\n    children: [{\n      path: \"/articles/:id\",\n      element: /*#__PURE__*/_jsxDEV(ArticlePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"/query/:content\",\n      element: /*#__PURE__*/_jsxDEV(QueryPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"/logout\",\n      element: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this)\n    }]\n  }];\n\n  // 没有授权的用户才可以访问的路由配置\n  const routesForNotAuthenticatedOnly = [{\n    path: \"/login\",\n    element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this)\n  }];\n\n  // 合并路由配置\n  const router = createBrowserRouter([...routesForPublic, ...(!token ? routesForNotAuthenticatedOnly : []), ...routesForAuthenticatedOnly]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n_s(Routes, \"ZpOvj47KCDv4EW5BIUHQHDAsr3M=\", false, function () {\n  return [useAuth];\n});\n_c = Routes;\nexport default Routes;\nvar _c;\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","useAuth","ProtectedRoute","Home","About","Login","jsxDEV","_jsxDEV","Routes","_s","token","routesForPublic","path","element","fileName","_jsxFileName","lineNumber","columnNumber","routesForAuthenticatedOnly","children","ArticlePage","QueryPage","routesForNotAuthenticatedOnly","router","_c","$RefreshReg$"],"sources":["C:/Users/jieli/Desktop/Coding/Project/MyBlog/Frontend/my-blog/src/Router/CustomRoutes.js"],"sourcesContent":["import { RouterProvider, createBrowserRouter } from \"react-router-dom\";\r\nimport { useAuth } from \"../provider/authProvider\";\r\nimport { ProtectedRoute } from \"./ProtectedRoute\";\r\nimport Home from \"../Components/Home\";\r\nimport About from \"../Components/About\";\r\nimport Login from \"../Components/Login\";\r\n\r\nconst Routes = () => {\r\n  const { token } = useAuth();\r\n\r\n  // 公共路由配置\r\n  const routesForPublic = [\r\n    {\r\n        path: \"/\",\r\n        element: <Home />,\r\n      },\r\n    {\r\n      path: \"/about-us\",\r\n      element: <About />,\r\n    },\r\n  ];\r\n\r\n  // 授权的用户才可以访问的路由配置\r\n  const routesForAuthenticatedOnly = [\r\n    {\r\n      path: \"/\",\r\n      element: <ProtectedRoute />, // Wrap the component in ProtectedRoute\r\n      children: [\r\n        {\r\n          path: \"/articles/:id\",\r\n          element: <ArticlePage/>,\r\n        },\r\n        {\r\n          path: \"/query/:content\",\r\n          element: <QueryPage/>,\r\n        },\r\n        {\r\n          path: \"/logout\",\r\n          element: <div>Logout</div>,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // 没有授权的用户才可以访问的路由配置\r\n  const routesForNotAuthenticatedOnly = [\r\n    {\r\n      path: \"/login\",\r\n      element: <Login />,\r\n    },\r\n  ];\r\n\r\n  // 合并路由配置\r\n  const router = createBrowserRouter([\r\n    ...routesForPublic,\r\n    ...(!token ? routesForNotAuthenticatedOnly : []),\r\n    ...routesForAuthenticatedOnly,\r\n  ]);\r\n\r\n  return <RouterProvider router={router} />;\r\n};\r\n\r\nexport default Routes;\r\n"],"mappings":";;AAAA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,SAASC,OAAO,QAAQ,0BAA0B;AAClD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAM,CAAC,GAAGT,OAAO,CAAC,CAAC;;EAE3B;EACA,MAAMU,eAAe,GAAG,CACtB;IACIC,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEN,OAAA,CAACJ,IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAClB,CAAC,EACH;IACEL,IAAI,EAAE,WAAW;IACjBC,OAAO,eAAEN,OAAA,CAACH,KAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACnB,CAAC,CACF;;EAED;EACA,MAAMC,0BAA0B,GAAG,CACjC;IACEN,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEN,OAAA,CAACL,cAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAE;IAC7BE,QAAQ,EAAE,CACR;MACEP,IAAI,EAAE,eAAe;MACrBC,OAAO,eAAEN,OAAA,CAACa,WAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IACxB,CAAC,EACD;MACEL,IAAI,EAAE,iBAAiB;MACvBC,OAAO,eAAEN,OAAA,CAACc,SAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IACtB,CAAC,EACD;MACEL,IAAI,EAAE,SAAS;MACfC,OAAO,eAAEN,OAAA;QAAAY,QAAA,EAAK;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAC3B,CAAC;EAEL,CAAC,CACF;;EAED;EACA,MAAMK,6BAA6B,GAAG,CACpC;IACEV,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEN,OAAA,CAACF,KAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACnB,CAAC,CACF;;EAED;EACA,MAAMM,MAAM,GAAGvB,mBAAmB,CAAC,CACjC,GAAGW,eAAe,EAClB,IAAI,CAACD,KAAK,GAAGY,6BAA6B,GAAG,EAAE,CAAC,EAChD,GAAGJ,0BAA0B,CAC9B,CAAC;EAEF,oBAAOX,OAAA,CAACR,cAAc;IAACwB,MAAM,EAAEA;EAAO;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C,CAAC;AAACR,EAAA,CArDID,MAAM;EAAA,QACQP,OAAO;AAAA;AAAAuB,EAAA,GADrBhB,MAAM;AAuDZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}