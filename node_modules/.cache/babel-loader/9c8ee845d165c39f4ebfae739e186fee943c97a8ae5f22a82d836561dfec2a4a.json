{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToken } from \"./TokenProvider\";\nconst BASE_URL = \"http://localhost:8080\";\nconst controller = new AbortController();\nexport const axObj = axios.create({\n  baseURL: BASE_URL,\n  signal: controller.signal\n});\nexport const GetAuthHeader = () => {\n  _s();\n  const {\n    token,\n    setToken\n  } = useToken();\n  const config = {\n    headers: {\n      'Authorization': `Bearer ${token || ''}`,\n      'Content-Type': 'application/json'\n    }\n  };\n  return config;\n};\n_s(GetAuthHeader, \"PwccXo2Skd8g6D4OC+WSqPmiCKc=\", false, function () {\n  return [useToken];\n});\n_c = GetAuthHeader;\naxObj.interceptors.request.use(config => {\n  // 在这里查看请求的所有信息\n  console.log(\"Request Config:\", config);\n\n  // 返回配置，以便请求继续发送\n  return config;\n}, error => {\n  // 请求错误时执行\n  console.error(\"Request Error:\", error);\n  return Promise.reject(error);\n});\n\n// // 响应拦截器：在响应被处理之前执行\n// axObj.interceptors.response.use(\n//   (response) => {\n//     // 在这里查看响应的所有信息\n//     console.log(\"Response Data:\", response.data);\n//     console.log(\"Response Status:\", response.status);\n//     console.log(\"Response Headers:\", response.headers);\n\n//     // 返回响应，以便继续处理\n//     return response;\n//   },\n//   (error) => {\n//     // 响应错误时执行\n//     console.error(\"Response Error:\", error);\n//     return Promise.reject(error);\n//   }\n// );\n\nexport const fetchArticleById = async ({\n  queryKey\n}) => {\n  const [_key, path] = queryKey;\n  const response = await axObj.get(path);\n  return response.data;\n};\nexport const fetchArticlesByLimit = async ({\n  queryKey\n}) => {\n  const [_key, fetchArticlesByLimitPath] = queryKey;\n  const response = await axObj.get(fetchArticlesByLimitPath);\n  return response.data;\n};\nexport const fetchArticlesNumber = async ({\n  queryKey\n}) => {\n  const [_key, path] = queryKey;\n  const response = await axObj.get(path);\n  return response.data;\n};\nexport const updateArticleById = async ({\n  newData\n}) => {\n  const {\n    path,\n    updateData\n  } = newData;\n  console.log(`http://localhost:8080${path}`);\n  console.log(updateData);\n  const response = await axObj.put(path, updateData);\n  return response.data;\n};\nexport const fetchTrendingArticlesByLimit = async ({\n  queryKey\n}) => {\n  const [_key, fetchArticlesByLimitPath] = queryKey;\n  const response = await axObj.get(fetchArticlesByLimitPath);\n  return response.data;\n};\nexport const fetchArticlesByContent = async ({\n  queryKey\n}) => {\n  const [_key, Path] = queryKey;\n  const response = await axObj.get(Path);\n  return response.data;\n};\nexport const fetchArticlesTitleByLimit = async ({\n  queryKey\n}) => {\n  const [_key, Path] = queryKey;\n  const response = await axObj.get(Path);\n  return response.data;\n};\nexport const fetchArticlesByAuthorId = async ({\n  queryKey\n}) => {\n  const [_key, data] = queryKey;\n  const response = await axObj.get(data, GetAuthHeader);\n  return response.data;\n};\nexport const fetchUserById = async ({\n  queryKey\n}) => {\n  const [_key, data] = queryKey;\n  const response = await axObj.get(data);\n  return response.data;\n};\nexport const loginRequest = async data => {\n  const response = await axObj.post('/users/login', data);\n  // localStorage.setItem('token',response.data);\n  return response;\n};\nvar _c;\n$RefreshReg$(_c, \"GetAuthHeader\");","map":{"version":3,"names":["React","useState","axios","useToken","BASE_URL","controller","AbortController","axObj","create","baseURL","signal","GetAuthHeader","_s","token","setToken","config","headers","_c","interceptors","request","use","console","log","error","Promise","reject","fetchArticleById","queryKey","_key","path","response","get","data","fetchArticlesByLimit","fetchArticlesByLimitPath","fetchArticlesNumber","updateArticleById","newData","updateData","put","fetchTrendingArticlesByLimit","fetchArticlesByContent","Path","fetchArticlesTitleByLimit","fetchArticlesByAuthorId","fetchUserById","loginRequest","post","$RefreshReg$"],"sources":["C:/Users/jieli/Desktop/Coding/Project/MyBlog/Frontend/my-blog/src/Components/FetchAPI.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToken } from \"./TokenProvider\";\r\n\r\nconst BASE_URL = \"http://localhost:8080\";\r\nconst controller = new AbortController();\r\nexport const axObj = axios.create({\r\n  baseURL: BASE_URL,\r\n  signal: controller.signal\r\n});\r\n\r\nexport const GetAuthHeader = ()=>{\r\n  const {token , setToken} = useToken();\r\n  const config = {\r\n    headers: {\r\n      'Authorization': `Bearer ${token || ''}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  return config;\r\n}\r\n\r\naxObj.interceptors.request.use(\r\n  (config) => {\r\n    // 在这里查看请求的所有信息\r\n    console.log(\"Request Config:\", config);\r\n\r\n    // 返回配置，以便请求继续发送\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // 请求错误时执行\r\n    console.error(\"Request Error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// // 响应拦截器：在响应被处理之前执行\r\n// axObj.interceptors.response.use(\r\n//   (response) => {\r\n//     // 在这里查看响应的所有信息\r\n//     console.log(\"Response Data:\", response.data);\r\n//     console.log(\"Response Status:\", response.status);\r\n//     console.log(\"Response Headers:\", response.headers);\r\n\r\n//     // 返回响应，以便继续处理\r\n//     return response;\r\n//   },\r\n//   (error) => {\r\n//     // 响应错误时执行\r\n//     console.error(\"Response Error:\", error);\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\n\r\nexport const fetchArticleById = async ({queryKey}) => {\r\n  const [_key, path] = queryKey;\r\n  const response = await axObj.get(path);\r\n  return response.data;\r\n};\r\n\r\nexport const fetchArticlesByLimit = async ({ queryKey }) => {\r\n  const [_key, fetchArticlesByLimitPath] = queryKey;\r\n  const response = await axObj.get(fetchArticlesByLimitPath)\r\n  return response.data;\r\n};\r\n\r\nexport const fetchArticlesNumber = async ({queryKey}) => {\r\n    const [_key, path] = queryKey;\r\n    const response = await axObj.get(path);\r\n    return response.data;\r\n};\r\n\r\nexport const updateArticleById = async ({newData}) => {\r\n    const {path , updateData} = newData;\r\n    console.log(`http://localhost:8080${path}`);\r\n    console.log(updateData);\r\n    const response = await axObj.put(path,updateData);\r\n    return response.data;\r\n};\r\n\r\nexport const fetchTrendingArticlesByLimit = async ({ queryKey }) => {\r\n  const [_key, fetchArticlesByLimitPath] = queryKey;\r\n  const response = await axObj.get(fetchArticlesByLimitPath)\r\n  return response.data;\r\n};\r\n\r\nexport const fetchArticlesByContent = async ({ queryKey }) => {\r\n  const [_key, Path] = queryKey;\r\n  const response = await axObj.get(Path)\r\n  return response.data;\r\n};\r\n\r\nexport const fetchArticlesTitleByLimit = async ({ queryKey }) => {\r\n  const [_key, Path] = queryKey;\r\n  const response = await axObj.get(Path)\r\n  return response.data;\r\n};\r\n\r\nexport const fetchArticlesByAuthorId = async ({queryKey}) => {\r\n  const [_key, data] = queryKey;\r\n  const response = await axObj.get(data,GetAuthHeader);\r\n  return response.data;\r\n};\r\n\r\nexport const fetchUserById = async ({queryKey}) => {\r\n  const [_key, data] = queryKey;\r\n  const response = await axObj.get(data);\r\n  return response.data;\r\n};\r\n\r\nexport const loginRequest = async (data) => {\r\n    const response = await axObj.post('/users/login', data)\r\n    // localStorage.setItem('token',response.data);\r\n    return response;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}