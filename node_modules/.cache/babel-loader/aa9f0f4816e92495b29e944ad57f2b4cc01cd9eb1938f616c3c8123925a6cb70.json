{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jieli\\\\Desktop\\\\Coding\\\\Project\\\\MyBlog\\\\Frontend\\\\my-blog\\\\src\\\\Components\\\\TokenProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenContext = /*#__PURE__*/createContext();\nexport const TokenProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(null);\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      token,\n      setToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenProvider, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n_c = TokenProvider;\nexport const useToken = () => {\n  _s2();\n  const context = useContext(TokenContext);\n  if (!context) {\n    throw new Error('useToken must be used within a TokenProvider');\n  }\n  return context;\n};\n_s2(useToken, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","TokenContext","TokenProvider","children","_s","token","setToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useToken","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/jieli/Desktop/Coding/Project/MyBlog/Frontend/my-blog/src/Components/TokenProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst TokenContext = createContext();\r\n\r\nexport const TokenProvider = ({ children }) => {\r\n  const [token, setToken] = useState(null);\r\n\r\n  return (\r\n    <TokenContext.Provider value={{ token, setToken }}>\r\n      {children}\r\n    </TokenContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useToken = () => {\r\n  const context = useContext(TokenContext);\r\n  if (!context) {\r\n    throw new Error('useToken must be used within a TokenProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,oBACEE,OAAA,CAACC,YAAY,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAC/CA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACR,EAAA,CARWF,aAAa;AAAAW,EAAA,GAAbX,aAAa;AAU1B,OAAO,MAAMY,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGnB,UAAU,CAACI,YAAY,CAAC;EACxC,IAAI,CAACe,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}