{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jieli\\\\Desktop\\\\Coding\\\\Project\\\\MyBlog\\\\Frontend\\\\my-blog\\\\src\\\\Components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useQuery } from '@tanstack/react-query';\nimport { fetchArticlesByContent, fetchArticlesByTitle } from './FetchAPI';\nimport { NavLink, Navigate } from 'react-router-dom';\n\n// 使用 styled-components 创建一个带样式的搜索框容器\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 500px;\n  margin: 0 auto;\n  border: 2px solid #2f54eb;\n  border-radius: 25px;\n`;\n\n// 使用 styled-components 创建样式化的输入框\n_c = SearchContainer;\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 25px;\n  font-size: 16px;\n  outline: none;\n`;\n\n// 使用 styled-components 创建样式化的搜索按钮\n_c2 = SearchInput;\nconst SearchButton = styled.button`\n  background-color: #2f54eb;\n  color: white;\n  font-weight: bold;\n  border: none;\n  border-radius: 0 25px 25px 0;\n  padding: 12px;\n  cursor: pointer;\n  transition: background-color 0.3s, transform 0.2s;\n  transform: translateX(2px);\n`;\n_c3 = SearchButton;\nconst SearchBar = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  let queryContent = null;\n  const handleSearch = async e => {\n    e.preventDefault();\n    try {\n      await refetch();\n      if (data) {\n        // handleQueryFromSearch(data); // 调用回调函数\n      }\n    } catch (error) {\n      console.error(\"Error fetching articles:\", error);\n    }\n  };\n\n  //get articles by title and content\n  const {\n    isInitialLoading,\n    isError,\n    data,\n    error,\n    refetch,\n    isFetching\n  } = useQuery({\n    queryKey: [\"articles\", `/articles/title/${query}`],\n    queryFn: fetchArticlesByTitle,\n    enabled: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSearch,\n    children: /*#__PURE__*/_jsxDEV(SearchContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n        type: \"text\",\n        placeholder: \"Search...\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"9I8+OV6iYifiOpLYh8DfF7zOcm0=\", false, function () {\n  return [useQuery];\n});\n_c4 = SearchBar;\nexport default SearchBar;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"SearchContainer\");\n$RefreshReg$(_c2, \"SearchInput\");\n$RefreshReg$(_c3, \"SearchButton\");\n$RefreshReg$(_c4, \"SearchBar\");","map":{"version":3,"names":["React","useState","styled","useQuery","fetchArticlesByContent","fetchArticlesByTitle","NavLink","Navigate","jsxDEV","_jsxDEV","SearchContainer","div","_c","SearchInput","input","_c2","SearchButton","button","_c3","SearchBar","_s","query","setQuery","queryContent","handleSearch","e","preventDefault","refetch","data","error","console","isInitialLoading","isError","isFetching","queryKey","queryFn","enabled","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["C:/Users/jieli/Desktop/Coding/Project/MyBlog/Frontend/my-blog/src/Components/SearchBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { fetchArticlesByContent, fetchArticlesByTitle } from './FetchAPI';\r\nimport { NavLink, Navigate } from 'react-router-dom';\r\n\r\n// 使用 styled-components 创建一个带样式的搜索框容器\r\nconst SearchContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 500px;\r\n  margin: 0 auto;\r\n  border: 2px solid #2f54eb;\r\n  border-radius: 25px;\r\n`;\r\n\r\n// 使用 styled-components 创建样式化的输入框\r\nconst SearchInput = styled.input`\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 25px;\r\n  font-size: 16px;\r\n  outline: none;\r\n`;\r\n\r\n// 使用 styled-components 创建样式化的搜索按钮\r\nconst SearchButton = styled.button`\r\n  background-color: #2f54eb;\r\n  color: white;\r\n  font-weight: bold;\r\n  border: none;\r\n  border-radius: 0 25px 25px 0;\r\n  padding: 12px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s, transform 0.2s;\r\n  transform: translateX(2px);\r\n`;\r\n\r\nconst SearchBar = () => {\r\n  const [query, setQuery] = useState('');\r\n  let queryContent = null;\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await refetch();\r\n      if (data) {\r\n        // handleQueryFromSearch(data); // 调用回调函数\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching articles:\", error);\r\n    }\r\n  };\r\n\r\n  //get articles by title and content\r\n  const {isInitialLoading, isError, data, error, refetch, isFetching} = useQuery({\r\n    queryKey: [\"articles\", `/articles/title/${query}`],\r\n    queryFn: fetchArticlesByTitle,\r\n    enabled: false\r\n  });\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSearch}>\r\n      <SearchContainer>\r\n        <SearchInput\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n        />\r\n        <SearchButton type=\"submit\">\r\n          Search\r\n        </SearchButton>\r\n      </SearchContainer>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,sBAAsB,EAAEC,oBAAoB,QAAQ,YAAY;AACzE,SAASC,OAAO,EAAEC,QAAQ,QAAQ,kBAAkB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGR,MAAM,CAACS,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,EAAA,GATMF,eAAe;AAUrB,MAAMG,WAAW,GAAGX,MAAM,CAACY,KAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GATMF,WAAW;AAUjB,MAAMG,YAAY,GAAGd,MAAM,CAACe,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAVIF,YAAY;AAYlB,MAAMG,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAIsB,YAAY,GAAG,IAAI;EAEvB,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,OAAO,CAAC,CAAC;MACf,IAAIC,IAAI,EAAE;QACR;MAAA;IAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAM;IAACE,gBAAgB;IAAEC,OAAO;IAAEJ,IAAI;IAAEC,KAAK;IAAEF,OAAO;IAAEM;EAAU,CAAC,GAAG9B,QAAQ,CAAC;IAC7E+B,QAAQ,EAAE,CAAC,UAAU,EAAG,mBAAkBb,KAAM,EAAC,CAAC;IAClDc,OAAO,EAAE9B,oBAAoB;IAC7B+B,OAAO,EAAE;EACX,CAAC,CAAC;EAGF,oBACE3B,OAAA;IAAM4B,QAAQ,EAAEb,YAAa;IAAAc,QAAA,eAC3B7B,OAAA,CAACC,eAAe;MAAA4B,QAAA,gBACd7B,OAAA,CAACI,WAAW;QACV0B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvBC,KAAK,EAAEpB,KAAM;QACbqB,QAAQ,EAAGjB,CAAC,IAAKH,QAAQ,CAACG,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFtC,OAAA,CAACO,YAAY;QAACuB,IAAI,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAE5B;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEX,CAAC;AAAC3B,EAAA,CAvCID,SAAS;EAAA,QAiByDhB,QAAQ;AAAA;AAAA6C,GAAA,GAjB1E7B,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAAP,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAA8B,GAAA;AAAAC,YAAA,CAAArC,EAAA;AAAAqC,YAAA,CAAAlC,GAAA;AAAAkC,YAAA,CAAA/B,GAAA;AAAA+B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}